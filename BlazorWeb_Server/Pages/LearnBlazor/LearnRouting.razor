@page "/LearnBlazor/LearnRouting/{parameter1}"
@page "/LearnBlazor/LearnRouting/{parameter1:int}/{parameter2}"
@page "/LearnBlazor/LearnRouting"
@page "/LearnRouting"
@using System.Web;

@inject NavigationManager _NavigationManager
<h3>LearnRouting</h3>
<h4>Parameter 1 : @Parameter1</h4>
<h4>Parameter 2 : @Parameter2</h4>
@* <a href="/LearnRouting?Param1=Tangy&Param2=Blazor" class="btn btn-primary">Load with query</a> *@
<button @onclick="NavigateToQueryParam" class="btn btn-primary">Load with query</button>
<button class="btn btn-success" @onclick="LoadParameter">Load Parameters</button>
<br />
<h3>Query String Parameters: </h3>
<h4>Parameter 1 : @Param1</h4>
<h4>Parameter 2 : @Param2</h4>
@code {
        [Parameter]
        public int Parameter1 { get; set; }
        [Parameter]
        public string Parameter2 { get; set; }

    public string Param1{ get; set; }
    public string Param2 { get; set; }
    private void LoadParameter()
    {
        var absoluteUrl = new Uri(_NavigationManager.Uri);
        var queryParam = HttpUtility.ParseQueryString(absoluteUrl.Query);
        Param1 = queryParam["Param1"];
        Param2 = queryParam["Param2"];
    }
    private void NavigateToQueryParam()
    {
        _NavigationManager.NavigateTo("LearnRouting?Param1=Tangy&Param2=Blazor");
    }
}
